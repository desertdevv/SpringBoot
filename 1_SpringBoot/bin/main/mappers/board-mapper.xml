<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.springboot.board.model.mapper.BoardMapper">

	<select id ="getListCount" resultType="_int">
		select count(*)
		from board
		where board_status = 'Y' and board_type = #{i}
	</select>

	<select id="selectBoardList" resultMap="boardResultSet">
		select *
		from board
			join member on(board_writer =id)
		where board_status = 'Y' and board_type = #{i}
		order by board_id desc
	</select>
	
	<resultMap type="Board" id="boardResultSet">
		<result column="BOARD_CREATE_DATE" property="createDate"/>
		<result column="BOARD_MODIFY_DATE" property="modifyDate"/>
		<result column="BOARD_STATUS" property="status"/>
	</resultMap>
	
	
<!-- 	
selectKey 적용 시키기 
	insert 나 update를 하고 나서 사용할 키(시퀀스) 값을 조회해서 피라미터로 전달받아 객체 필드에 대입

-->
	<insert id="insertBoard">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardId">
			select seq_bid.nextval from dual
		</selectKey>
		insert into board
		values (#{boardId}, #{boardTitle}, #{boardWriter}, #{boardContent},default,sysdate,sysdate,default,#{boardType})
	</insert>
 
	<select id="selectBoard">
		select *
		from board
			join member on(board_writer = id)
		where board_status = 'Y' and board_id = #{bId}
<!-- 		'Y'를 추가안해주면 url을타고 삭제된걸 볼수가있어서 넣어준다. -->
	</select>
  
	<update id="updateCount">
		update board
		set board_count = board_count +1
		where board_id = #{bId}
	</update>
	
	<update id ="updateBoard">
		update board
		set board_title=#{boardTitle}, board_content=#{boardContent}, board_modify_date=sysdate, board_type=#{boardType}
		where board_id=#{boardId}
	</update>

	<update id ="deleteBoard">
		update board
		set board_status = 'N'
		where board_id =#{bId}
	</update>

	<select id="selectAttmBoardList" resultType="Attachment">
		select *
		from attachment
		where attm_status = 'Y' 
		<if test="bId == null">
			and attm_level =0
		</if>
		<if test='bId != null'>
			and ref_board_id = #{bId}
		</if>
		
		order by attm_id
	</select>
	
	<insert id="insertAttm">
		insert all
		
		<foreach collection="list" item="item" separator=" ">
			into attachment
			values(new_aid, #{item.refBoardId}, #{item.originalName}, #{item.renameName},#{item.attmPath},#{item.attmLevel},default)
		</foreach>
		select * from dual
<!-- 		select을 할필요가 없지만 문법상 무조건 넣어야 하기때문에 가상테이블인 dual에서 가져온다. -->

	</insert>
	
	
	<delete id="deleteAttm">
<!-- 		전달받은 rename에 해당하는 첨부 파일 데이터 삭제	 -->
		delete from attachment
		where rename_name in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
		
	</delete>
	
	<update id="updateAttmLevel">
<!-- 		해당 게시글의 기존 파일중 하나를 level = 0 으로 수정 -->
		update attachment
		set	attm_level = 0
		where attm_id = (select min(attm_id)
						from attachment
						where ref_board_id = #{boardId})

	</update>


<!-- 	<update id="statusNAttm"> -->
<!-- 		update attachment -->
<!-- 		set attm_status = 'N' -->
<!-- 		where ref_board_id = #{bId} -->
<!-- 	</update> -->


	<select id="selectTop" resultMap="boardResultSet">
	
		select *
		from(select *
			from board
				join member on(id= board_writer) 
			where BOARD_STATUS = 'Y'
			order by board_count desc)
		where rownum <![CDATA[<]]>= 5
		
	</select>
	
	
	<select id="selectReplyList" resultType="Reply">
		select * 
		from reply
			join member on(reply_writer = id)
		where ref_board_id = #{bId} and reply_status='Y'
		order by reply_id desc
	</select>
	
	
	<insert id="insertReply">
		insert into reply
		values (seq_rid.nextval,#{replyContent},#{refBoardId},#{replyWriter},sysdate,sysdate,default)
	</insert>

	<delete id="deleteReply">
		delete from reply
		where reply_id = #{rId}
	</delete>
	
	<update id="updateReply">
		update reply
		set reply_content = #{replyContent}
		where reply_id = #{replyId}
	</update>



</mapper>